services:
  broker:
    image: apache/kafka:latest
    hostname: broker
    container_name: broker
    restart: always
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_OPTS: '-XX:-UseContainerSupport'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker:29093
      KAFKA_LISTENERS: PLAINTEXT://broker:29092,CONTROLLER://broker:29093,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LOG_DIRS: /tmp/kraft-combined-logs
      CLUSTER_ID: MkU3OEVBNTcwNTJENDM2Qk
    healthcheck:
      test: ["CMD", "nc", "-z", "broker", "29092"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/database/init:/docker-entrypoint-initdb.d:ro 
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  akhq:
    image: tchiotludo/akhq
    container_name: akhq
    restart: always
    ports:
      - '9080:8080'
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            local:
              properties:
                bootstrap.servers: "broker:29092"
    depends_on:
      broker:
        condition: service_healthy

  auth-service:
    build:
      context: ./backend/auth-service
      args:
        JAR_FILE: target/auth-service-*.jar
    container_name: auth-service
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - '8080:8080'
    env_file:
      - ./backend/auth-service/.env
    environment:
      - FRONTEND_URL=http://localhost:3000
      - STRAVA_REDIRECT_URI=http://localhost:8080/login/oauth2/code/strava
    volumes:
      - ./backend/auth-service/config/keys:/app/config/keys

  activity-service:
    build:
      context: ./backend/activity-service
      args:
        JAR_FILE: target/activity-service-*.jar
    container_name: activity-service
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      broker:
        condition: service_healthy
      postgres:
        condition: service_healthy
      auth-service:
        condition: service_healthy
    ports:
      - '8081:8081'
    env_file:
      - ./backend/activity-service/.env
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=broker:29092
      - AUTH_SERVICE_URL=http://auth-service:8080
      - AUTH_SERVICE_PUBLIC_KEY_URL=http://auth-service:8080/internal/public-key
      - DB_URL=jdbc:postgresql://postgres:5432/activity_service
      - FRONTEND_URL=http://localhost:3000

  segmentation-service:
    build:
      context: ./backend/segmentation-service
    container_name: segmentation-service
    restart: always
    depends_on:
      broker:
        condition: service_healthy
      postgres:
        condition: service_healthy
    env_file:
      - ./backend/segmentation-service/.env
    environment:
      - KAFKA_BROKER=broker:29092
    command: ['python', 'app.py']

  terrain-service:
    build:
      context: ./backend/terrain-service
    container_name: terrain-service
    #restart: always
    depends_on:
      broker:
        condition: service_healthy
    env_file:
      - ./backend/terrain-service/.env
    environment:
      - KAFKA_BROKER=broker:29092
    command: ['python', 'app.py']

  frontend:
    build:
      context: ./frontend
      args:
        VITE_API_AUTH__BASE_URL: http://localhost:8080
        VITE_API_ACTIVITY_BASE_URL: http://localhost:8081
        VITE_STRAVA_CLIENT_ID: 138564
    container_name: frontend
    restart: always
    depends_on:
      auth-service:
        condition: service_healthy
      activity-service:
        condition: service_healthy
    ports:
      - '3000:80' # Map Nginx to localhost:3000

volumes:
  postgres_data:
